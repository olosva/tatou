name: CI

on:
  push:
  pull_request:

jobs:
  test-and-fuzz:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server   # kÃ¶r alla kommandon i ./server
    env:
      TEST_HTTP_BASE: http://localhost:5000

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install system deps (ghostscript)
        run: |
          sudo apt-get update
          sudo apt-get install -y ghostscript

      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -e ".[dev]" schemathesis hypothesis requests

      - name: Create .env for docker compose
        run: |
          cat > .env <<'EOF'
          SECRET_KEY=ci-secret
          MARIADB_ROOT_PASSWORD=tatou
          MARIADB_USER=tatou
          MARIADB_PASSWORD=tatou
          DB_USER=tatou
          DB_PASSWORD=tatou
          DB_HOST=db
          DB_NAME=tatou
          EOF

      - name: Build & start stack
        run: |
          docker compose build server
          docker compose up -d
          docker compose ps

      - name: Wait for /healthz
        run: |
          for i in $(seq 1 60); do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$TEST_HTTP_BASE/healthz") || code=000
            if [ "$code" = "200" ]; then
              echo "Server is healthy"
              exit 0
            fi
            echo "Waiting for server... ($i/60), code=$code"
            sleep 2
          done
          echo "Server failed to become healthy"
          docker compose logs --no-color > ../docker-logs.txt || true
          exit 1

      - name: Run pytest
        run: |
          pytest -q --maxfail=1 --disable-warnings --junitxml=../pytest-report.xml

      - name: Schemathesis smoke fuzz (do not fail CI)
        run: |
          schemathesis run openapi/openapi.yaml \
            --url "$TEST_HTTP_BASE" \
            --phases=examples,fuzzing,stateful \
            --checks=all \
            -n 100 \
            --report-junit-path ../fuzz-junit.xml \
            --report-har-path ../fuzz.har \
          || echo "::warning::Schemathesis found failures (see artifacts); not failing CI"

      - name: Save docker logs
        if: always()
        run: docker compose logs --no-color > ../docker-logs.txt || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: |
            ../pytest-report.xml
            ../fuzz-junit.xml
            ../fuzz.har
            ../docker-logs.txt

      - name: Tear down
        if: always()
        run: docker compose down -v
